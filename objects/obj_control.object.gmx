<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Define constants and displays

global.unit_selected = "None";
global.selected_tile = noone;
global.turn = "DS"

MAX_WIDTH = view_wview;
MAX_HEIGHT = view_hview;

infantry_units = 20;
armor_units = 12;
forward_attack = 20;
f_units = forward_attack;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// View stuff

x_start = 448;
y_start = 96;
offset = 5;

global.selected_display = instance_create(x_start, y_start - 64, obj_display);
global.selected_display.this_unit = "None";

var disp = instance_create(x_start, y_start, obj_display);
disp.sprite_index = spr_heavy_tank;
disp.this_unit = "Heavy Tank";

var disp = instance_create(x_start, y_start + 32, obj_display);
disp.sprite_index = spr_missile_tank;
disp.this_unit = "Missile Tank";

var disp = instance_create(x_start, y_start + 32 * 2, obj_display);
disp.sprite_index = spr_gev;
disp.this_unit = "GEV";

var disp = instance_create(x_start, y_start + 32 * 3, obj_display);
disp.sprite_index = spr_howitzer;
disp.this_unit = "Howitzer";

var disp = instance_create(x_start, y_start + 32 * 4, obj_display);
disp.sprite_index = spr_infantry;
disp.this_unit = "Infantry 1";

var disp = instance_create(x_start, y_start + 32 * 5, obj_display);
disp.sprite_index = spr_infantry_2;
disp.this_unit = "Infantry 2";

var disp = instance_create(x_start, y_start + 32 * 6, obj_display);
disp.sprite_index = spr_infantry_3;
disp.this_unit = "Infantry 3";

var disp = instance_create(x_start, y_start + 32 * 7, obj_display);
disp.sprite_index = spr_cp;
disp.this_unit = "Command Post";

var disp = instance_create(x_start, y_start + 32 * 8, obj_display);
disp.sprite_index = spr_delete;
disp.this_unit = "Delete";

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup

if (global.turn == "DS"){
    // Defender setup
    
    f_units = forward_attack
    with(obj_defender){
        var obstructed_y = 480;
        var crater_y = 224;
        
        if (y &lt;= obstructed_y &amp;&amp; y &gt; crater_y)
            other.f_units -= attack;//get_attack_value(object_index);
    }
        
    
    i_units = infantry_units;
    with(obj_infantry)
        other.i_units -= attack;
        
    a_units = armor_units - (instance_number(obj_defender) + instance_number(obj_howitzer) 
                          - instance_number(obj_infantry) - instance_number(obj_cp));
    
    if (instance_number(obj_cp) &gt; 0)
        obj_same_room_button.visible = true;
    else   
        obj_same_room_button.visible = false;
        
    if (global.unit_selected != "None"){
    
        if (global.unit_selected != "Delete"){
        
            var unit = get_selected_unit();
            if (unit == obj_cp){
                if (instance_number(obj_cp) &gt; 0){
                    invalidate_selected();
                } else 
                    show_valid_tiles()
                    
            } else if (unit == obj_infantry){
                var cost;
                if (global.unit_selected == "Infantry 1")
                    cost = 1;
                if (global.unit_selected == "Infantry 2")
                    cost = 2;
                if (global.unit_selected == "Infantry 3")
                    cost = 3; 
                if (cost &gt; i_units){
                    invalidate_selected();
                } else 
                    show_valid_tiles();
                    
            } else {
                var cost = 1;
                if (unit == obj_howitzer)
                    cost++;
                if (cost &gt; a_units){
                    invalidate_selected();
                } else
                    show_valid_tiles()
            }   
        } else 
            show_occupied_tiles();
    } else
        obj_hex.sprite_index = spr_hex;
        
} else if (global.turn == "AS"){
    // Attacker setup
    
    if (instance_number(obj_ogre) &gt; 0)
        obj_same_room_button.visible = true;
    else   
        obj_same_room_button.visible = false;
    
    if (global.unit_selected != "Delete"){
        if (instance_number(obj_ogre) &gt; 0){
            // Invalidate current selection
            invalidate_selected();
        } else {
            show_valid_tiles();
        }
    } else {
        show_occupied_tiles();
    }
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// The game

if (global.turn == "A"){
    //show_debug_message("Attacker");
} else if (global.turn == "D"){


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (view_hview &gt; 200 &amp;&amp; view_wview &gt; 200){
    view_hview /= .9;
    view_wview /= .9;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (view_hview &lt; MAX_HEIGHT &amp;&amp; view_wview &lt; MAX_WIDTH){
    view_hview *= .9;
    view_wview *= .9;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the game
//var vertical_index = 0;

if (global.turn == "DS"){
    // Defender setup
    
    // Displays for selecting defense units
    draw_text_color(x_start + 32, y_start - offset, "Heavy Tank", c_black, c_black, c_black, c_black, 1);
    draw_text_color(x_start + 32, y_start - offset + 32, "Missile Tank", c_black, c_black, c_black, c_black, 1);
    draw_text_color(x_start + 32, y_start - offset + 32 * 2, "GEV", c_black, c_black, c_black, c_black, 1);
    draw_text_color(x_start + 32, y_start - offset + 32 * 3, "Howitzer", c_black, c_black, c_black, c_black, 1);
    draw_text_color(x_start + 32, y_start - offset + 32 * 4, "Infantry 1", c_black, c_black, c_black, c_black, 1);
    draw_text_color(x_start + 32, y_start - offset + 32 * 5, "Infantry 2", c_black, c_black, c_black, c_black, 1);
    draw_text_color(x_start + 32, y_start - offset + 32 * 6, "Infantry 3", c_black, c_black, c_black, c_black, 1);
    draw_text_color(x_start + 32, y_start - offset + 32 * 7, "Command Post", c_black, c_black, c_black, c_black, 1);
    draw_text_color(x_start + 32, y_start - offset + 32 * 8, "Delete", c_black, c_black, c_black, c_black, 1);
    
    // Show invalid selections
    if (i_units &lt; 3){
        draw_text_color(x_start + 32, y_start - offset + 32 * 6, "-----------------         Not enough units", c_red, c_red, c_red, c_red, 1);
    }
    if (i_units &lt; 2){
        draw_text_color(x_start + 32, y_start - offset + 32 * 5, "-----------------         Not enough units", c_red, c_red, c_red, c_red, 1);
    }
    if (i_units &lt; 1){
        draw_text_color(x_start + 32, y_start - offset + 32 * 4, "-----------------         Not enough units", c_red, c_red, c_red, c_red, 1);
    }
    if (a_units &lt; 1){
        draw_text_color(x_start + 32, y_start - offset, "-------------------       Not enough units", c_red, c_red, c_red, c_red, 1);
        draw_text_color(x_start + 32, y_start - offset + 32, "--------------------      Not enough units", c_red, c_red, c_red, c_red, 1);
        draw_text_color(x_start + 32, y_start - offset + 32 * 2, "------                Not enough units", c_red, c_red, c_red, c_red, 1);
    }
    if (a_units &lt; 2){
        draw_text_color(x_start + 32, y_start - offset + 32 * 3, "---------------          Not enough units", c_red, c_red, c_red, c_red, 1);
    }  
    if (instance_number(obj_cp) &gt; 0){
        draw_text_color(x_start + 32, y_start - offset + 32 * 7, "------------------------    Command Post already placed", c_red, c_red, c_red, c_red, 1);
    }
    
    // Show selected unit
    //draw_text_color(x_start, y_start - 64 - 32, "Selected Unit", c_black, c_black, c_black, c_black, 1);
    //draw_text_color(x_start + 32, y_start - offset - 64, global.unit_selected, c_black, c_black, c_black, c_black, 1);
    
    // Show units remaining
    draw_text_color(x_start, y_start - offset + 32 * 10, "Infantry units left: " + string(i_units), c_black, c_black, c_black, c_black, 1);
    draw_text_color(x_start, y_start - offset + 32 * 11, "Armor units left: " + string(a_units), c_black, c_black, c_black, c_black, 1);
    draw_text_color(x_start, y_start - offset + 32 * 12, "Forward Attack left: " + string(f_units), c_black, c_black, c_black, c_black, 1);
    
} else if (global.turn == "AS"){
    // Attacker setup
    
    draw_text_color(x_start + 32, y_start - offset, "Ogre Mk III", c_black, c_black, c_black, c_black, 1);
    draw_text_color(x_start + 32, y_start - offset + 32, "Delete", c_black, c_black, c_black, c_black, 1);
    
    //show_valid_tiles(obj_ogre);
    
    if (instance_number(obj_ogre) &gt; 0){
        draw_text_color(x_start + 32, y_start - offset, "--------------------- Ogre already placed", c_red, c_red, c_red, c_red, 1);
    }
} else {
    // Draw the game
    show_ogre_details(400,100);

}

// Show selected unit
draw_text_color(x_start, y_start - 64 - 32, "Selected Unit", c_black, c_black, c_black, c_black, 1);
draw_text_color(x_start + 32, y_start - offset - 64, global.unit_selected, c_black, c_black, c_black, c_black, 1);




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
