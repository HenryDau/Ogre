<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sliding_bar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var x_offset = 20;

bar = instance_create(x,y, obj_sliding_bar_box);
bar.max_x = x + sprite_width / 2 - x_offset;
bar.min_x = x - sprite_width / 2 + x_offset;

MAX_VALUE = 100;
MIN_VALUE = 0;

text = "Test: ";
offset = 200;
mode = 0;

value_to_change = global.armor_units;

if (mode == 1){
    value_to_change = global.infantry_units;
} else if (mode == 2) {     
    value_to_change = global.armor_units;
} else if (mode == 3) {
    value_to_change = global.forward_units;
}

clicked = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (mode == 1){
    value_to_change = global.infantry_units;
} else if (mode == 2) {     
    value_to_change = global.armor_units;
} else if (mode == 3) {
    value_to_change = global.forward_units;
}

if (!bar.clicked &amp;&amp; value_to_change != floor(bar.percentage * (MAX_VALUE - MIN_VALUE) + MIN_VALUE)){

    var bar_scale_factor = (bar.max_x - bar.min_x);
    bar.x = (value_to_change - MIN_VALUE) / (MAX_VALUE - MIN_VALUE) * bar_scale_factor + bar.min_x;
    
} else {
    value_to_change = floor(bar.percentage * (MAX_VALUE - MIN_VALUE) + MIN_VALUE);
}

if (mode == 1){
    global.infantry_units = value_to_change;
} else if (mode == 2) {     
    global.armor_units = value_to_change;;
} else if (mode == 3) {
    global.forward_units = value_to_change;;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>bar.x = mouse_x;

if (global.sound_enabled)
    audio_play_sound(snd_click, 0, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_set_color(c_white);

draw_text(x - offset, y - 5, text + string(value_to_change));

draw_set_color(c_black);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
